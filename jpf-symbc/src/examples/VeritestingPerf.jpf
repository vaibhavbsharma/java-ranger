target=VeritestingPerf
classpath=${jpf-symbc}/build/examples,${jpf-symbc}/lib/com.ibm.wala.util-1.4.4-SNAPSHOT.jar
sourcepath=${jpf-symbc}/src/examples
vm.storage.class=nil
symbolic.debug=false

#symbolic.method=VeritestingPerf.testSimple1(sym)
#symbolic.method=VeritestingPerf.nestedRegion(sym)
#symbolic.method=VeritestingPerf.countBitsSet(sym)
#symbolic.method=VeritestingPerf.testDynObject(sym#sym)
#symbolic.method=VeritestingPerf.testSimple1(sym)
#symbolic.method=VeritestingPerf.checkOperator()
#symbolic.method=VeritestingPerf.fieldTest1(sym)

#symbolic.method=VeritestingPerf.testSimple(sym)
#symbolic.method=VeritestingPerf.simpleRegion(sym)
#symbolic.method=VeritestingPerf.staticMethod1(sym)
#symbolic.method=VeritestingPerf.method1(sym)
#symbolic.method=VeritestingPerf.mwwNestedIfBranch(sym#sym)
#symbolic.method=VeritestingPerf.fieldWriteTestBranch2(sym)
#symbolic.method=VeritestingPerf.fieldWriteTestBranch1(sym)
#symbolic.method=VeritestingPerf.testSimple1(sym)
#symbolic.method=VeritestingPerf.testSimple2(sym)
#symbolic.method=VeritestingPerf.testSimpleFail(sym)
#symbolic.method=VeritestingPerf.countBitsSet(sym)
#symbolic.method=VeritestingPerf.readAfterWriteTest(sym)
#symbolic.method=VeritestingPerf.nestedRegion(sym)
#symbolic.method=VeritestingPerf.testNested(sym)
#symbolic.method=VeritestingPerf.testNestedMiddle(sym)
#symbolic.method=VeritestingPerf.nestedRegion1(sym#sym)
#symbolic.method=VeritestingPerf.testDynObject(sym#sym)
#symbolic.method=VeritestingPerf.nestedRegionThrowsException(sym)
#symbolic.method=VeritestingPerf.simpleRegionThrowsException(sym)
#symbolic.method=VeritestingPerf.cfgTest(sym)
#symbolic.method=VeritestingPerf.testMe5(sym#sym)
#symbolic.method=VeritestingPerf.testMe6(sym#sym#sym#sym)
#symbolic.method=VeritestingPerf.arrayTest(con#sym)


######## testing ArrrayLoad  ######
#symbolic.method=VeritestingPerf.inRangeloadArrayTC(sym#sym)
#symbolic.method=VeritestingPerf.outRangeloadArrayTC(sym#sym)
#symbolic.method=VeritestingPerf.catchOutRangeloadArrayTC(sym#sym)
#symbolic.method=VeritestingPerf.innerCatchOutRangeloadArrayTC(sym#sym)
#symbolic.method=VeritestingPerf.boundedOutRangeloadArrayTC(sym#sym)
#symbolic.method=VeritestingPerf.segmantTest(sym#sym)
#symbolic.method=VeritestingPerf.testSegment2(sym#sym#sym)
#symbolic.method=VeritestingPerf.arrayLoadTC1(sym#sym)


######## testing createObject  ######
#symbolic.method=VeritestingPerf.createObjectTC5(sym#sym)
#symbolic.method=VeritestingPerf.createObjectTC2(sym#sym)
#symbolic.method=VeritestingPerf.createObjectTC3(sym#sym)
#symbolic.method=VeritestingPerf.createObjectTC4(sym#sym)
#symbolic.method=VeritestingPerf.createObjectTC5(sym#sym)
#symbolic.method=VeritestingPerf.createObjectTC6(sym#sym)
#symbolic.method=VeritestingPerf.createObjectTC7(sym#sym)
#symbolic.method=VeritestingPerf.createObjectTC8(sym#sym)
#symbolic.method=VeritestingPerf.highOrd3(sym)
#symbolic.method=VeritestingPerf.createObjectTC08(sym#sym#sym)
#symbolic.method=VeritestingPerf.createObjectTC9(sym#sym)
#symbolic.method=VeritestingPerf.createObjectTC10(sym#sym)
#symbolic.method=VeritestingPerf.assertRegions(sym#sym)
#symbolic.method=VeritestingPerf.createObjectComplexRegionTC1(sym#sym)
#symbolic.method=VeritestingPerf.createObjectComplexRegionTC2(sym#sym)
#symbolic.method=VeritestingPerf.createObjectComplexRegionTC3(sym#sym)
#symbolic.method=VeritestingPerf.createObjectComplexRegionTC4(sym#sym)
#symbolic.method=VeritestingPerf.createObjectComplexRegionTC5(sym#sym)
#symbolic.method=VeritestingPerf.createObjectComplexRegionTC6(sym#sym)
#symbolic.method=VeritestingPerf.createObjectComplexRegionTC7(sym#sym)
#symbolic.method=VeritestingPerf.createObjectComplexRegionTC8(sym#sym)
#symbolic.method=VeritestingPerf.arrayLoad1(con#sym#sym)
#symbolic.method=VeritestingPerf.createObjectComplexRegionTC9(sym#sym)
#symbolic.method=VeritestingPerf.createObjectComplexRegionTC10(sym#sym)


######## spfcases tests  ######
#symbolic.method=VeritestingPerf.createObjectComplexRegionTC2(sym#sym)


######## paper Example ######
#symbolic.method=VeritestingPerf.paperExample(con)
#symbolic.method=VeritestingPerf.paperExampleNum(sym#sym#sym#sym#sym#sym)

######## fixpoint ######
#symbolic.method=VeritestingPerf.fixPointExample1(sym)
#symbolic.method=VeritestingPerf.fixPointExample2(sym)
#symbolic.method=VeritestingPerf.fixPointExample3(sym)
#symbolic.method=VeritestingPerf.fixPointExample4(sym)

######## testing arrayStore  ######
#symbolic.method=VeritestingPerf.arrayStoreTC1(sym#sym)
#symbolic.method=VeritestingPerf.arrayStoreTC2(sym#sym#con)
#symbolic.method=VeritestingPerf.arrayStoreTC3(sym#sym#con)
#symbolic.method=VeritestingPerf.arrayStoreTC4(sym#sym#con)
#symbolic.method=VeritestingPerf.arrayStoreTC5(sym#sym#con)
#symbolic.method=VeritestingPerf.arrayStoreTC6(sym#sym)
#symbolic.method=VeritestingPerf.arrayStoreTC7(sym#sym)

#symbolic.method=VeritestingPerf.arrayLoad0(sym#sym)


######## testing highOrderRegion  ######
#symbolic.method=VeritestingPerf.intermediateVarHgRegion(sym)
#symbolic.method=VeritestingPerf.intermediateVarHgRegion2(sym)
#symbolic.method=VeritestingPerf.simpleRegion(sym)
#symbolic.method=VeritestingPerf.countBitsSetSimple(sym)
#symbolic.method=VeritestingPerf.mwwTestOrIte(sym#sym#sym)

######## testing region boundary  ######
#symbolic.method=VeritestingPerf.fieldWriteTestBranch2(sym)


######## testing nullPointerSPFCases  ######
#symbolic.method=VeritestingPerf.getFieldSPFCaseTC1(sym)


######## all tests before pushing ######
#symbolic.method=VeritestingPerf.countBitsSetSimple(sym)
#symbolic.method=VeritestingPerf.mwwTestAndIte(sym#sym#sym)
#symbolic.method=VeritestingPerf.mwwTestComplexCondition1(sym#sym#sym#sym#sym)

######## testing ir  ######
#symbolic.method=VeritestingPerf.irTest2(sym)
#symbolic.method=VeritestingPerf.irTest6(sym)
#symbolic.method=VeritestingPerf.fieldTest1(sym)
#symbolic.method=VeritestingPerf.fieldTest00(sym)

######## testing complexRegions  ######
#symbolic.method=VeritestingPerf.foo(sym)
#symbolic.method=VeritestingPerf.assertRegions(sym#sym)
#symbolic.method=VeritestingPerf.ifNull(con)
#symbolic.method=TestPaths.testMe2(sym#sym)


######## testing early retruns  ######
#symbolic.method=VeritestingPerf.earlyReturn0(sym#sym#sym)
#symbolic.method=VeritestingPerf.earlyReturn1(sym#sym#sym)
#symbolic.method=VeritestingPerf.earlyReturn2(sym#sym#sym)
#symbolic.method=VeritestingPerf.earlyReturn3(sym#sym#sym)
#symbolic.method=VeritestingPerf.earlyReturn4(sym#sym#sym)
#symbolic.method=VeritestingPerf.erTest1(sym)

#symbolic.method=VeritestingPerf.wrapper(sym#sym)

#symbolic.method=VeritestingPerf.wbsConditions(con#sym)

#symbolic.method=VeritestingPerf.isalnum(sym)
#symbolic.method=VeritestingPerf.isalnum2(sym)

#symbolic.method=VeritestingPerf.isint1(sym)
#symbolic.method=VeritestingPerf.isint2(sym)
#symbolic.method=VeritestingPerf.earlyReturn4(sym#sym#sym)


#symbolic.method=VeritestingPerf.regionTest(sym)

#symbolic.method=VeritestingPerf.testWhileProblem1(sym#sym)

#symbolic.method=VeritestingPerf.recursiveIsFun(sym)

#symbolic.method=VeritestingPerf.fib2(sym)

symbolic.method=VeritestingPerf.sheepAndGoat(sym)

symbolic.dp=z3bitvector

#symbolic.min_int=-1
#symbolic.max_int=2

#symbolic.min_int=-15
#symbolic.max_int=16

symbolic.min_int=-2147483648
symbolic.max_int=2147483647
listener = .symbc.VeritestingListener
#listener = .symbc.SymbolicListener
veritestingMode = 3
symbolic.lazy = true
veritestRegionExpectedCount=-1
performanceMode=true

rewriteGoTo = true

recursiveDepth = 2

jitAnalysis=true

