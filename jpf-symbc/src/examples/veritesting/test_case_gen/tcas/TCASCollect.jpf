target=veritesting.tcas.tcas
classpath=${jpf-symbc}/build/examples
sourcepath=${jpf-symbc}/src/examples
symbolic.method = veritesting.tcas.tcas.sym1(con#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym2(con#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym3(con#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas..sym4(con#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym5(con#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym6(con#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas..sym7(con#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym8(con#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym9(con#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym),veritesting.tcas.tcas.sym10(con#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym)

vm.storage.class=nil
symbolic.debug=false

#listener = .symbc.SymbolicListener

jvm.insn_factory.class=gov.nasa.jpf.symbc.BranchSymInstructionFactory

#symbolic.dp=z3

symbolic.dp=z3inc
listener = .symbc.BranchListener,gov.nasa.jpf.symbc.sequences.SymbolicSequenceListener,gov.nasa.jpf.symbc.numeric.solvers.IncrementalListener

#symbolic.optimizechoices=false

branchCoverageOn=true
targetAbsPath=${jpf-symbc}/build/examples/veritesting/tcas/tcas.class
coverageExclusions=Lveritesting/tcas/tcas.main([Ljava/lang/String)V

coverageMode=1

