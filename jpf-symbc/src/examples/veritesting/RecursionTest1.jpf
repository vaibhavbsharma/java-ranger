target=veritesting.RecursionTest1
veritestRegionExpectedCount = -1
# Classes that wish to test a veritesting region can populate the expected value of
# VeritestingListener.veritestRegionCount in this variable. TestVeritesting will assert
# VeritestingListener.veritestRegionCount to be equal to veritestRegionExpectedCount
# Since on every execution path, we expect a region to be instantiated, this variable should correspond to the
# total number of execution paths we expect during equivalence-checking.

classpath=${jpf-symbc}/build/examples,${jpf-symbc}/lib/com.ibm.wala.util-1.4.4-SNAPSHOT.jar
sourcepath=${jpf-symbc}/src/examples
vm.storage.class=nil
symbolic.debug=false

######## testing equivalence ######
symbolic.method=veritesting.TestVeritesting.testHarness(con#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym#sym)

symbolic.min_int=-32
symbolic.max_int=32
symbolic.min_double=-100.0
symbolic.max_double=100.0

#symbolic.dp=z3bitvector
#listener = .symbc.VeritestingListener
#listener = .symbc.SymbolicListener

veritestingMode = 5
performanceMode = false
symbolic.lazy = true
recursiveDepth=2

symbolic.dp=z3bitvectorinc
listener = .symbc.VeritestingListener,gov.nasa.jpf.symbc.numeric.solvers.IncrementalListener
symbolic.optimizechoices=false

jitAnalysis = true